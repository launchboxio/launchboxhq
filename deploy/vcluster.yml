globalAnnotations:
  "launchboxhq.io/project-id": "<%= @project.id %>"
vcluster:
  extraArgs:
    - "--kube-apiserver-arg=--oidc-username-claim=preferred_username"
    - "--kube-apiserver-arg=--oidc-issuer-url=<%= Rails.configuration.launchbox[:vcluster][:oidc_issuer_url] %>"
    - "--kube-apiserver-arg=--oidc-client-id=lNylsUBcv_6pFwITm2CxTOGd3k_tr7kmeG4TJp4gruk"
    - "--kube-apiserver-arg=--oidc-ca-file=/oidc-certs/ca.crt"
    - "--kube-apiserver-arg=--oidc-username-claim=email"
    - "--kube-apiserver-arg=--oidc-groups-claim=groups"
  resources:
    limits:
      cpu: <%= @project.cpu %>
      memory: "<%= @project.memory %>Mi"
  volumeMounts:
    - mountPath: /data
      name: data
    - name: launchbox-local-tls
      mountPath: "/oidc-certs"
      readOnly: true
storage:
  persistence: true
  size: "<%= @project.disk %>Gi"
sync:
  ingresses:
    enabled: true
  serviceaccounts:
    enabled: true
syncer:
  extraArgs:
    - --tls-san="<%= @project.slug %>.<%= @project.slug %>"
    - --out-kube-config-server=https://<%= @project.slug %>.<%= @project.slug %>
ingress:
  enabled: true
  ingressClassName: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  host: "api.<%= @project.slug %>.<%= Rails.configuration.launchbox[:vcluster][:cluster_domain] %>"
volumes:
  - name: launchbox-local-tls
    secret:
      secretName: root-secret
      items:
        - key: ca.crt
          path: ca.crt
init:
  manifests: |
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: admins
    subjects:
    - kind: User
      name: <%= @project.user.email %>
      apiGroup: rbac.authorization.k8s.io
    roleRef:
      kind: ClusterRole
      name: cluster-admin
      apiGroup: rbac.authorization.k8s.io
