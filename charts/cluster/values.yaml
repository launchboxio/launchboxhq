# The cloud provider of choice
# Must be one of: amazon, google, azure, digialocean, vcluster
cloud: digitalocean

tags: []

kubernetes:
  version: 1.23.3
  network:
    podCidrBlocks:
      - 192.168.0.0/16
  controlPlane:
    replicas: 1
  worker:
    replicas: 3
  oidcIdentityProviderConfig:
    enabled: false
    clientId:
    groupsClaim:
    groupsPrefix:
    identityProviderConfigName:
    issuerUrl:
    requiredClaims:
    usernameClaim:
    usernamePrefix:

google:
  region: us-east1
  project: launchboxhq
  controlPlane:
    machineType: n1-standard-2
    image: projects/launchboxhq/global/images/cluster-api-ubuntu-1804-v1-23-10-1667871972
  node:
    machineType: n1-standard-2
    image: projects/launchboxhq/global/images/cluster-api-ubuntu-1804-v1-23-10-1667871972
  network:
    name: launchboxhq
    autoCreateSubnetworks: false

digitalocean:
  region: nyc1
  controlPlane:
    imageId: 120462120
    machineType: s-2vcpu-4gb
  node:
    imageId: 120462120
    machineType: s-2vcpu-4gb
  sshKeys:
    -     88:84:bc:ae:1a:15:b6:38:d6:89:84:05:6e:04:c3:18

vcluster:
  controlPlaneEndpoint:
    host: ""
    port: 0
  helmRelease:
    chart:
      name:
      repo:
      version:
    values: {}

amazon:
  region: us-east-1
  sshKeyName: ""
  workers:
    replicas: 3
  flavor: eks
  addons: []
  oidcProvider:
    enabled: true
  encryption:
  endpointAccess:
    private:
      enabled: true
    public:
      enabled: true
      cidrBlocks: []
  iamAuthenticatorConfig:
    mapRoles: []
    mapUsers: []
  logging:
    apiServer: true
    audit: true
    authenticator: true
    controllerManager: true
    scheduler: true
  subnets:
  vpc:
    cidrBlock: 10.10.10.1/16
  roleAdditionalPolicies: []


  # - name: something
  #   serviceAccountRoleArn: arn:aws:iam....
  #   version: x.x.x
  #   conflictResolution: overwrite *(optional)
